<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.ProjectDAO">


	<select id="getMember" parameterType="java.util.Map" resultType="MemberVO">
		SELECT *
		FROM member
		WHERE member_id = #{member_id} and member_pwd = #{member_pwd} and member_grade = #{member_grade}
	</select>

	<insert id="postregister" parameterType="java.util.Map">
		insert into member (
			member_id, member_pwd, member_name, member_email, member_phone, member_grade, member_dept
			) 
			values (
				#{member_id}, #{member_pwd}, #{member_name}, #{member_email}, #{member_phone}, #{member_grade}, #{member_dept}
				)
	</insert>
	
	<select id="checkMember_id" parameterType="string" resultType="int">
		select count(*)
		from member
		where member_id = #{member_id}	
	</select>


   <select id="getCompanyList" resultType="CompanyVO">
      select *
      from company
   </select>


	<select id="orderformList" resultType="OrderformVO">
		select * from orderform
	</select>
	
	<insert id="addCompany" parameterType="CompanyVO">
	    INSERT INTO company (company_name, company_busnum, company_ceo, company_phone, company_email, company_address)
	    VALUES (#{company_name}, #{company_busnum}, #{company_ceo}, #{company_phone}, #{company_email}, #{company_address});
	</insert>
	
	<insert id="addProduct" parameterType="ProductVO">
	    INSERT INTO product (product_name, product_code, product_brand, product_category, product_price)
	    VALUES (#{product_name}, #{product_code}, #{product_brand}, #{product_category}, #{product_price});
	</insert>
	
	<select id="findMaxProductNum" resultType="int">
		select max(product_num) from product
	</select>
	
	<insert id="fileUpload" parameterType="FileVO">
		INSERT INTO file (file_name, file_path, file_subject, file_pk)
	    VALUES (#{file_name}, #{file_path}, #{file_subject}, #{file_pk});
	</insert>
	
	<select id="productCodeCheck" parameterType="String" resultType="java.lang.Integer">
		select count(*) from product where product_code = #{product_code}
	</select>
	
	<select id="companyNameCheck" parameterType="String" resultType="String">
		select company_name from company where company_name like #{company_name} order by company_name asc limit 1;
	</select>
	
	
	
	
	
	<select id="getProductionPlanList" resultType="ProductionVO">
	select * from production;
	</select>
	

	
	<insert id="insertOrderform" parameterType="OrderformVO">
		insert into orderform (
			orderform_name, orderform_stat, company_num, company_num2, orderform_content, orderform_regdate, orderform_startDate, orderform_endDate
			) 
			values (
				#{orderform_name}, #{orderform_stat}, #{company_num}, #{company_num2}, #{orderform_content}, now(), #{orderform_startDate}, #{orderform_endDate}
				)
	</insert>
	
	<select id="getLastOrderformNum" resultType="int">
		select *
		from orderform
		order by orderform_num desc
		limit 1;
	</select>
		
	   <select id="getCompanyByCompanyName" resultType="CompanyVO">
      select *
      from company
      where company_name = #{company_name}
   </select>
	   <select id="getProductByProductName" resultType="ProductVO">
      select *
      from product
      where product_name = #{product_name}
   </select>   
		
	<insert id="insertOrderformDetail" parameterType="OrderformDetailVO">
		insert into orderformdetail (
			orderform_num, product_num, orderdetail_amount, orderdetail_price
		)
		values (
			#{orderform_num}, #{product_num}, #{orderdetail_amount}, #{orderdetail_price}			
		)
	</insert>

	<insert id="insertQuotation" parameterType="QuotationVO">
		insert into quotation (
			quot_name, quot_stat, company_num, company_num2, quot_content, quot_regdate, quot_startdate, quot_enddate
		)
		values (
			#{quot_name}, #{quot_stat}, #{company_num}, #{company_num2}, #{quot_content}, now(), #{quot_startdate}, #{quot_enddate}
		)
	</insert>
	
	<select id="getLastQuotationNum" resultType="int">
		select *
		from quotation
		order by quot_num desc
		limit 1;
	</select>
	
	<insert id="insertQuotationDetail" parameterType="QuotationDetailVO">
			insert into quotationdetail (
				quot_num, product_num, quotdetail_amount, quotdetail_price
			) values (
				#{quot_num}, #{product_num}, #{quotdetail_amount}, #{quotdetail_price}
			)
	</insert>
		
	
	
	
	
	
	
	<!-- 김민성 ========================================================================================= -->
	
	<select id="orderList" resultType="OrderformVO">
	    SELECT 
	        orderform.*,
	        SUM(orderformdetail.orderdetail_price) AS total_price
	    FROM 
	        orderform
	    JOIN 
	        orderformdetail
	    ON 
	        orderform.orderform_num = orderformdetail.orderform_num
	    GROUP BY 
	        orderform.orderform_num;
	</select> 
	<!-- 물품 판매 리스트 -->
	<select id="quotationList" resultType="QuotationVO">
	   SELECT 
	        quotation.*,
	        SUM(quotationdetail.quotdetail_price) AS total_price
	    FROM 
	        quotation
	    JOIN 
	        quotationdetail
	    ON 
	        quotation.quot_num = quotationdetail.quot_num
	    GROUP BY 
	        quotation.quot_num;
	</select>	
	
	<select id="allFormList" resultType="QuotationVO">
		SELECT 
	           *,
	            concat('quot', quot_num) as this_num
	            
	       FROM 
	           quotation
	       GROUP BY 
	           quotation.quot_num
	      union ALL
	        SELECT
	         *,
	           concat('order', orderform_num) as this_num
	       FROM 
	           orderform
	       GROUP BY 
	           orderform.orderform_num;
	</select>
	
	
	<insert id="insertProduction" parameterType="ProductionVO">
	insert into production (pd_writedate,pd_writer,pd_dept,pd_startdate,pd_enddate,pd_name,pd_content,pd_check)
	values (now(),#{pd_writer},#{pd_dept},#{pd_startdate},#{pd_enddate},#{pd_name},#{pd_content},0)
	</insert>
	
	<insert id="insertproductiondetail" parameterType="ProductionDetailVO">
		insert into productiondetail (pd_num,product_name,productiondetail_amount)
		values
	 <foreach collection="list" item="planVO" separator=",">
	 (#{planVO.pd_num},#{planVO.product_name},#{planVO.productiondetail_amount})
	 </foreach>
	</insert> 
	
	<select id="getFatoryWorkList" resultType="ProductionVO">
	select * from production where pd_check = 0;
	</select>
	
	<select id="getFactoryDetail" parameterType="int" >
		select * from production where pd_num = #{pd_num}
	</select>
	
	<select id="getFactoryDetailList" parameterType="int" >
		select * from productiondetail where pd_num = #{pd_num}
	</select>
	
	
      
   <select id="getProductList" resultType="ProductVO">
      select *
      from product
   </select>
   
    <select id="getfindLastProductionNumber" resultType="int">
	select pd_num from production order by pd_num desc limit 1;
	</select>
	
  
   <!-- 생산 계획서 -->
   

   
   <select id="getRecipeNumByProductName" resultType="int">
   select recipe_num  from  recipe  where product_name = #{product_name};
   </select>
   
   <select id="getRecipeDetailListByRecipeNum" resultType="RecipeDetailVO">
   select * from recipedetail where recipe_num = #{recipe_num};
   </select>
   
   <!-- 원본 -->
  <update id="reduceInventoryAmount" parameterType="InventoryVO">
   update inventory 
   set inven_amount = inven_amount - #{inven_amount} where inven_name = #{inven_name} and inven_amount >= #{inven_amount}
   </update> 
 	
  <update id="setPdCheckUpdate" parameterType="ProductionVO"> 
	update 	production
	set pd_check = 1 where pd_num = #{pd_num}
  </update>
 	
 	
<!-- 	<update id="reduceInventoryAmount" parameterType="InventoryVO">
	 update inventory 
	 set inven_amount = inven_amount - #{inven_amount} where inven_name = #{inven_name} and inven_amount >= #{inven_amount}
	 	<if test="0 > inven_amount">
	 		
	 	</if>
	</update> -->

 	
 	
 	
 	
 	
 	
   
</mapper>